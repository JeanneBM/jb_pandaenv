<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.39">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.7.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.7.2">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.82">
    <script>pipeline {
   
    agent{
        label &apos;Slave&apos;
    }

    tools {
        maven &apos;auto_maven&apos;
    }

    environment {
        IMAGE = readMavenPom().getArtifactId()
        VERSION = readMavenPom().getVersion()
    }
    
    stages {
        stage(&apos;Clear running apps&apos;) {
            steps {
                sh &quot;docker rm -f pandaapp || true&quot;
                }
            }

        stage(&apos;Get Code&apos;) {
            steps {
                git branch: &apos;feature/pipeline&apos;, credentialsId: &apos;350814d5-69cb-4728-94ee-818d5fdd3d96&apos;, url: &apos;https://github.com/JoannaDemo/panda_application2&apos;
                    }
        }
        
        stage(&apos;Build and JUnit&apos;) {
            steps {
                sh &quot;mvn clean install&quot;
            }
        }
        
        stage(&apos;Build Docker image&apos;) {
            steps {
                sh &quot;mvn package -Pdocker&quot;
            }
        }

        stage(&apos;Run Docker app&apos;) {
            steps {
                sh &quot;docker run -d -p 0.0.0.0:8080:8080 --name pandaapp -t ${IMAGE}:${VERSION}&quot;
            }
        }
        
        
        stage(&apos;test Selenium&apos;) {
            steps {
                // 
                sh &quot;mvn test -Pselenium&quot;
            }
        }
        
        stage(&apos;Deploy to Artifactory&apos;) {
            steps {
                configFileProvider([configFile(fileId: &apos;da5150e0-eb6e-41b2-ad8d-9feef186d5cc&apos;, variable: &apos;MAVEN_SETTINGS&apos;)]) {
                sh &quot;mvn -gs $MAVEN_SETTINGS deploy&quot;}
             }
        }
        
    }
    
    post {
        always { 
            sh &apos;docker stop pandaapp&apos;
            deleteDir()
        }
    }
}

</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>